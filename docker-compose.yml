services:
  redis: # caching
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
  
  api: # .net api
    image: planets-call-api
    container_name: api
    build:
      context: ./backend/PlanetsCall
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "8080:8080"
    env_file: 
      - .env.db
      - .env
    depends_on:
      - database
      - redis
    volumes:
      - world_db:/data
      - wwwroot:/app/wwwroot
      - data_protection_keys:/root/.aspnet/DataProtection-Keys
   # restart: always
      
  database: # postgres database
    image: postgres:latest
    container_name: database
    env_file:
      - .env.db
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/data

  react-app: # frontend app
    image: eco-fe-app
    container_name: react-app
    ports:
      - "80:80"
    build: 
      context: ./frontend/planetscall-frontend
      dockerfile: Dockerfile
      target: production
    depends_on:
      - api


volumes:
  app_data:
  world_db:
  wwwroot:
  data_protection_keys:
